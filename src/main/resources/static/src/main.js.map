{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_core/models/Pager.ts","./src/app/_ui/loader/loader.component.ts","./src/app/_ui/loader/loader.component.html","./src/app/_ui/simple-pager/simple-pager.component.ts","./src/app/_ui/simple-pager/simple-pager.component.html","./src/app/_ui/ui.module.ts","./src/app/administration/synonym/components/synonym-edit/synonym-edit.component.ts","./src/app/administration/synonym/components/synonym-edit/synonym-edit.component.html","./src/app/administration/synonym/components/synonym-list.component.ts","./src/app/administration/synonym/components/synonym-list.component.html","./src/app/administration/synonym/models/CreateSynonym.ts","./src/app/administration/synonym/models/SynonymWord.ts","./src/app/administration/synonym/services/synonym.service.ts","./src/app/administration/synonym/synonym.module.ts","./src/app/administration/synonym/synonym.router.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/components/home-filter/home-filter.component.ts","./src/app/home/components/home-filter/home-filter.component.html","./src/app/home/components/home.component.ts","./src/app/home/components/home.component.html","./src/app/home/home.module.ts","./src/app/home/models/HomeFilter.ts","./src/app/home/services/home.service.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/side-bar/side-bar.component.ts","./src/app/side-bar/side-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Pager {\r\n    constructor() {\r\n        this.totalNumberOfRows = 0;\r\n        this.currentPage = 1;\r\n        this.totalPages = 1;\r\n    }\r\n    totalNumberOfRows: number;\r\n    currentPage: number;\r\n    totalPages: number;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner\"></div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Pager } from '@models/Pager'\r\n@Component({\r\n    selector: 'simple-pager',\r\n    templateUrl: './simple-pager.component.html'\r\n})\r\nexport class SimplePagerComponent {\r\n    @Input() pager: Pager;\r\n    @Input() showPageSizes: boolean = false;\r\n    @Input() isBusy: boolean = false;// If operation is not finished user can't click on pager button\r\n\r\n    @Output() onPageChanged = new EventEmitter<number>();\r\n    @Output() onPageSizeChanged = new EventEmitter<number>();\r\n\r\n    pageSizes: number[] = [10, 20, 50];\r\n    pageSize: number;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    previousPage(page: number) {\r\n        this.pager.currentPage = --page;\r\n        this.onPageChanged.emit(page);\r\n    }\r\n\r\n    nextPage(page: number) {\r\n        if (this.pager.totalPages === this.pager.currentPage) return;\r\n        this.pager.currentPage = ++page;\r\n        this.onPageChanged.emit(page);\r\n    }\r\n\r\n    firstPage() {\r\n        this.pager.currentPage = 1;\r\n        this.onPageChanged.emit(1);\r\n    }\r\n\r\n    lastPage() {\r\n        this.pager.currentPage = this.pager.totalPages;\r\n        this.onPageChanged.emit(this.pager.currentPage);\r\n    }\r\n\r\n    pageSizeChange(size: number) {\r\n        this.pageSize = size;\r\n        this.onPageSizeChanged.emit(size);\r\n    }\r\n}","<div class=\"col-md-12\">\r\n\r\n    <nav aria-label=\"...\">\r\n        <ul class=\"pagination pagination-sm\">\r\n            <li class=\"page-item\">\r\n                <button class=\"page-link\" [disabled]=\"pager.currentPage == 1 || isBusy\" (click)=\"firstPage()\">First\r\n                    Page</button>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <button class=\"page-link\" [disabled]=\"pager.currentPage == 1 || isBusy\"\r\n                    (click)=\"previousPage(pager.currentPage)\"> &lt; Previous Page</button>\r\n            </li>\r\n            <span class=\"align-middle\">\r\n                <small class=\"text-muted\">\r\n                    &nbsp;&nbsp; Page <b>{{ pager.currentPage}}</b> Out Of <b>{{ pager.totalPages }}</b> &nbsp;&nbsp;\r\n                </small>\r\n            </span>\r\n            <!-- <li class=\"page-item\">\r\n                <button class=\"page-link\" (click)=\"lastPage(pager.currentPage)\"> {{ pager.currentPage + 2 >= pager.totalPages ? pager.totalPages - 2 : pager.currentPage + 1 }}</button>\r\n            </li>\r\n            <li class=\"page-item active\">\r\n                <button class=\"page-link\" (click)=\"lastPage(pager.currentPage)\"> {{ pager.currentPage + 3 >= pager.totalPages ? pager.totalPages - 1 : pager.currentPage + 1 }}</button>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <button class=\"page-link\" (click)=\"lastPage(pager.currentPage)\"> {{ pager.currentPage + 4 >= pager.totalPages ? pager.totalPages : pager.currentPage + 1 }}</button>\r\n            </li> -->\r\n            <li class=\"page-item\">\r\n                <button class=\"page-link\" [disabled]=\"pager.currentPage == pager.totalPages || isBusy\"\r\n                    (click)=\"nextPage(pager.currentPage)\">Next Page &gt;</button>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <button class=\"page-link\" [disabled]=\"pager.currentPage == pager.totalPages || isBusy\"\r\n                    (click)=\"lastPage()\">Last Page</button>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { SimplePagerComponent } from './simple-pager/simple-pager.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SimplePagerComponent,\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    SimplePagerComponent,\n    LoaderComponent,\n  ],\n  providers: [\n    DatePipe,\n  ]\n})\nexport class UIModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResponseObject } from '@models/ResponseObject';\nimport { Word } from '@models/Word';\nimport { ToastrService } from 'ngx-toastr';\nimport { SynonymWord } from '../../models/SynonymWord';\nimport { SynonymService } from '../../services/synonym.service';\nimport { CreateSynonym } from '../../models/CreateSynonym'\n\n@Component({\n  selector: 'app-synonym-edit',\n  templateUrl: './synonym-edit.component.html',\n  styleUrls: ['./synonym-edit.component.css']\n})\nexport class SynonymEditComponent implements OnInit {\n  formWord: FormGroup;\n  formSynonym: FormGroup;\n  submittedFormWord = false;\n  submittedFormSynonym = false;\n  wordId: number;\n  synonymWord: SynonymWord;\n  //returnValue: ReturnObject;\n  get fw() { return this.formWord.controls; } // just for easy access from template\n  get fs() { return this.formSynonym.controls; }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    public service: SynonymService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm()\n    this.wordId = this.route.snapshot.params['wordId'] || 0; // If id is not in query string set 0\n\n    if (this.wordId > 0) { // Edit, go to backend and get some data\n      this.service.find(this.wordId).subscribe((result: SynonymWord) => {\n        this.synonymWord = result;\n        this.formWord.patchValue(this.synonymWord)  // Store intial value of reactive form \n      },\n        error => {\n          this.toastr.error(error); // errors from API\n        }); // Edit\n    }\n  }\n\n  initializeForm() {\n    this.synonymWord = new SynonymWord;\n    this.synonymWord.synonyms = new Array;\n\n    this.formWord = this.formBuilder.group({\n      wordText: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255), Validators.pattern('^[a-zA-Z]*$')]],\n    })\n    this.formSynonym = this.formBuilder.group({\n      synonym: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255), Validators.pattern('^[a-zA-Z]*$')]],\n      synonyms: this.formBuilder.group({\n        synonymId: [''],\n        synonymText: [''],\n      }),\n    })\n  }\n\n  updateForm() {\n    this.submittedFormWord = true\n    if (this.formWord.invalid) {\n      return;\n    } // form must be valid to create request to back end\n\n    if (this.synonymWord.synonyms.length === 0) {\n      this.toastr.error('Word must have at least one synonym.');\n      return;\n    } // Also at least one synonym must exist\n\n    const retWord: Word = this.formWord.value;\n    retWord.wordId = this.wordId;\n    this.synonymWord.wordId = 0;\n    this.synonymWord.wordText = retWord.wordText\n\n    if (this.wordId > 0) { // EDIT Word\n      this.synonymWord.wordId = this.wordId\n      this.editWord(this.synonymWord)\n    } else { // ADD word\n      this.createWord(this.synonymWord)\n    }\n  }\n\n  // Post new word with synonyms to the backend and return message\n  private createWord(data: SynonymWord) {\n    this.service.create(data).subscribe(\n      (result: ResponseObject) => {\n        if (result.isError) {\n          this.toastr.error(result.errorMessage);   // Show error message\n        } else {\n          this.toastr.success('Word is updated successfully!');   // Show succes message when data is successfully submited\n          this.router.navigate(['word']); // Navigate to word grid\n        }\n      },\n      error => {\n        this.toastr.error(error); // errors from API\n      });// Create user data using CRUD API\n  }\n\n  private editWord(word: SynonymWord) {\n    this.service.update(word).subscribe(\n      (result: ResponseObject) => {\n        if (result.isError) {\n          this.toastr.error(result.errorMessage);   // Show error message\n        } else {\n          this.toastr.success('Word is added successfully!');   // Show succes message when data is successfully submited\n        }\n      },\n      error => {\n        this.toastr.error(error); // errors from API\n      });// Create user data using CRUD API\n  }\n\n  removeSynonym(id: number) { // Click on Delete\n    if (this.synonymWord.synonyms.length > 1) {\n      this.service.deleteSynonym(id).subscribe(\n        (result: ResponseObject) => {\n          this.synonymWord.synonyms = this.synonymWord.synonyms.filter(obj => obj.synonymId !== id); // remove synonym from list\n        },\n        error => {\n          this.toastr.error(error); // errors from API\n        });// Delete synonym\n    } else {\n      this.toastr.error('At least one synonym must exist for a word!');\n    }\n\n  }\n\n  addSynonym() { // click on Add Synonym\n    this.submittedFormSynonym = true\n    if (this.formSynonym.invalid) {\n      return;\n    } // form must be valid to create request to back end\n    const selectedName = this.formSynonym.get('synonym').value; // get entered value\n\n    if (this.synonymWord.synonyms.length > 0) { // validation if nothing is added skip this step\n      const synArray = this.synonymWord.synonyms.map(x => x.synonymText.toLowerCase());\n      if (synArray.includes(selectedName?.toLowerCase())) { // check if is already added synonym \n        this.toastr.error('Synonym is already added!');\n        return;\n      }\n    } // Validation\n\n    if (this.wordId > 0) { // EDIT WORD --> ADD SYNONYM \n      this.addSynonymWithWord(selectedName)\n    } else {\n      this.synonymWord.synonyms.push({ synonymId: 0, synonymText: selectedName }) // ADD WORD - when we add synonym we set id to zero\n      this.resetForm(this.formSynonym);\n    }\n  }\n\n  private addSynonymWithWord(selectedName: string) { // Add synonym with wordId\n    const data = new CreateSynonym();\n    data.synonymText = selectedName;\n    data.wordId = this.wordId;\n    this.service.createSynonym(data).subscribe((result: ResponseObject) => {\n      if (result.isError) {\n        this.toastr.error(result.errorMessage);   // Show error message\n      } else {\n        this.synonymWord.synonyms.push({ synonymId: result.id, synonymText: selectedName }) // add synonym to ui\n        this.resetForm(this.formSynonym);\n        this.toastr.success('Synonym is added successfully!');   // Show succes message when data is successfully submited\n      }\n    },\n      error => {\n        this.toastr.error(error); // errors from API\n      });// Create synonym using CRUD API\n\n  }\n\n  private resetForm(form: FormGroup) {\n    form.reset();\n    Object.keys(form.controls).forEach(key => {\n      form.get(key).setErrors(null);\n    });\n  }\n}\n","<div class=\"container\">\n    <h1 *ngIf=\"wordId > 0; else elseNew\">Update</h1>\n    <ng-template #elseNew>\n        <h1>New</h1>\n    </ng-template>\n    <form [formGroup]=\"formWord\" (ngSubmit)=\"updateForm()\" novalidate>\n        <div class=\"form-row\">\n            <div class=\"col-md-10\">\n                <div class=\"form-group row\">\n                    <label for=\"wordText\" class=\"col-md-1 col-form-label\">Word:</label>\n                    <div class=\"col-md-11\">\n                        <input class=\"form-control\" formControlName=\"wordText\" id=\"wordText\"\n                            [ngClass]=\"{ 'is-invalid': submittedFormWord && fw.wordText.errors }\">\n                        <div class=\"mt-1\">\n                            <div *ngIf=\"submittedFormWord && fw.wordText.errors\">\n                                <p class=\"text-danger\" *ngIf=\"fw.wordText.errors.required\">Word can not be empty!</p>\n                                <p class=\"text-danger\" *ngIf=\"fw.wordText.errors.minlength\">Word field must be at least\n                                    2 characters!\n                                </p>\n                                <p class=\"text-danger\" *ngIf=\"fw.wordText.errors.maxlength\">Word field must be 255\n                                    characters max!\n                                </p>\n                                <p class=\"text-danger\" *ngIf=\"fw.wordText.errors.pattern\">Only letters are allowed\n                                    without space!</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"col-md-2\">\n                <button type=\"button\" class=\"btn btn-primary btn-block float-right\" type=\"submit\">Save</button>\n            </div>\n        </div>\n    </form>\n    <form [formGroup]=\"formSynonym\" (ngSubmit)=\"addSynonym()\" novalidate>\n        <div class=\"form-row\">\n            <div class=\"col-md-10\">\n                <div class=\"form-group row\">\n                    <label for=\"synonym\" class=\"col-md-1 col-form-label\">Synonym:</label>\n                    <div class=\"col-md-11\">\n                        <input class=\"form-control\" formControlName=\"synonym\" id=\"synonym\"\n                            [ngClass]=\"{ 'is-invalid': submittedFormSynonym && fs.synonym.errors }\">\n                        <div class=\"mt-1\">\n                            <div *ngIf=\"submittedFormSynonym && fs.synonym.errors\">\n                                <p class=\"text-danger\" *ngIf=\"fs.synonym.errors.required\">Synonym can not be empty!</p>\n                                <p class=\"text-danger\" *ngIf=\"fs.synonym.errors.minlength\">Synonym field must be at\n                                    least 2 characters!\n                                </p>\n                                <p class=\"text-danger\" *ngIf=\"fs.synonym.errors.maxlength\">Synonym field must be 255\n                                    characters max!\n                                </p>\n                                <p class=\"text-danger\" *ngIf=\"fs.synonym.errors.pattern\">Only letters are allowed\n                                    without space!</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-2\">\n                <button type=\"submit\" class=\"btn btn-outline-secondary btn-block float-right text-left\">\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Synonym\n                </button>\n            </div>\n        </div>\n\n        <div class=\"jumbotron jumbotron-fluid\" *ngIf=\"synonymWord?.synonyms?.length > 0\">\n            <div class=\"container\">\n                <div class=\"card\">\n                    <ul class=\"list-group\" *ngFor=\"let item of synonymWord.synonyms\">\n                        <li class=\"list-group-item align-text-bottom\">{{ item.synonymText }}\n                            <a class=\"btn btn-danger fa-pull-right\" (click)=\"removeSynonym(item.synonymId)\">\n                                <i class=\"fa fa-trash-o\"></i> Delete</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    <div class=\"form-group text-right\">\n        <a href=\"#\" routerLink=\"/word\" class=\"btn btn-light\">Back</a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Pager } from '@models/Pager'\nimport { Synonym } from '@models/Synonym';\nimport { SearchResult } from '@models/SearchResult';\nimport { ResponseGrid } from '@models/ResponseGrid'\nimport { SynonymService } from '../services/synonym.service'\nimport { ResponseObject } from '@models/ResponseObject';\n\n@Component({\n  selector: 'synonym-list',\n  templateUrl: './synonym-list.component.html',\n  styleUrls: ['./synonym-list.component.css']\n})\n\nexport class SynonymListComponent implements OnInit {\n  pageNumber: number;\n  pager: Pager;\n  showLoading: boolean = true;\n  isSelectable: boolean;\n  synonymGrid: SearchResult[];\n\n  constructor(\n    private service: SynonymService,\n    private toastr: ToastrService,\n    public router: Router) {\n  }\n\n  ngOnInit() {\n    this.pager = new Pager;\n    this.pageNumber = this.pager.currentPage;\n    this.getSynonyms(this.pageNumber)\n  }\n  \n  onPageChanged(newPage: number) {\n    this.pageNumber = newPage;\n    this.getSynonyms(newPage);\n  }\n\n  private getSynonyms(currentPage?: number) {\n    this.service.getAll(currentPage)\n      .subscribe((result: ResponseGrid<SearchResult>) => {\n        this.processResponseGrid(result);\n        this.showLoading = false; //chain\n      },\n        error => {\n          this.toastr.error(error); // errors from API\n          this.showLoading = false;\n        });\n  } // return Synonyms\n\n  private processResponseGrid(result: ResponseGrid<SearchResult>): void {\n    if (!result.isError) { // map data\n      this.synonymGrid = result.data;\n      this.pager = result.pager;\n      \n    } else {\n      this.toastr.error('Something gone wrong!');   // Show error message\n    }\n  }\n\n  deleteWord(id: number) {\n    this.service.deleteWord(id).subscribe(\n      (result: ResponseObject) => {\n        this.toastr.success('Successfully deleted word!');\n        this.getSynonyms(1) // reset grid or stay with this.pageNumber\n      },\n      error => {\n        this.toastr.error(error); // errors from API\n      });// Delete synonym\n  }\n\n  formatTableCell(syn: Synonym[]): string {\n    return syn.map(o => o.synonymText).join(\", \");\n  }\n\n  onPageSizeChanged(newSize: number) {\n    this.pageNumber = newSize;\n  } // not in use\n\n}\n","<div class=\"card-header\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"float-right\">\n                <a class=\"btn btn-outline-secondary btn-block float-right text-left\" routerLink=\"/word/new\"><i\n                        class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add new word</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th>Word</th>\n                        <th>Synonyms</th>\n                        <th class=\"text-center\" style=\"width: 120px;\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of synonymGrid\">\n                        <td>{{ item.wordText }}</td>\n                        <td>{{ formatTableCell(item.synonyms) }}</td>\n                        <td>\n                            <a class=\"btn btn-light\" [routerLink]=\"['/word/edit/', item.wordId]\" alt=\"Edit\"><i class=\"fa fa-edit\"></i></a>\n                            &nbsp;\n                            <button type=\"button\" class=\"btn btn-light\" (click)=\"deleteWord(item.wordId)\">\n                                <i class=\"fa fa-trash\"></i>\n                            </button>\n                        </td>\n\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"row float-right\">\n    <simple-pager (onPageChanged)=\"onPageChanged($event)\" (onPageSizeChanged)=\"onPageSizeChanged($event)\"\n        [pager]=\"pager\"></simple-pager>\n</div>\n\n<loader *ngIf=\"showLoading\"></loader>","export class CreateSynonym {\r\n    wordId: number;\r\n    synonymText: String;\r\n}","import { Synonym } from '@models/Synonym';\r\nexport class SynonymWord {\r\n    wordId: number;\r\n    wordText: string;\r\n    synonyms: Synonym[];\r\n}","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ResponseGrid } from '@models/ResponseGrid';\nimport { environment } from '@environments/environment';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { SynonymWord } from '../models/SynonymWord';\nimport { ResponseObject } from '@models/ResponseObject';\nimport { SearchResult } from '@models/SearchResult';\nimport { CreateSynonym } from '../models/CreateSynonym'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SynonymService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(currentPage: number): Observable<ResponseGrid<SearchResult>> {\n    if (!currentPage) {\n      currentPage = 1;\n    }\n\n    const params = new HttpParams({ fromObject: { pageNumber: currentPage.toString() } });\n\n    return this.http.get<ResponseGrid<SearchResult>>(`${environment.apiUrl}/word/grid`, { params: params })\n      .pipe(\n        map(results => { \n          console.log(results)\n          return results }),\n        catchError(this.handleError)\n      );\n\n    // let res: SearchResult[] = [\n    //   {\n    //     wordId: 1, wordText: 'Bossy', synonyms: [\n    //       { synonymText: 'controlling' },\n    //       { synonymText: 'tyrannical' }\n    //     ]\n    //   },\n    //   {\n    //     wordId: 2, wordText: 'Hardworking', synonyms: [\n    //       { synonymText: 'diligent' },\n    //       { synonymText: 'determined' },\n    //       { synonymText: 'industrious' },\n    //       { synonymText: 'enterprising' }\n    //     ]\n    //   }\n    // ];\n\n    // let ret: ResponseGrid<SearchResult> = {\n    //   data: res,\n    //   isError: false,\n    //   pager: new Pager\n    // }\n    // return of(ret);\n  }\n\n  find(wordId?: number) {\n    const para = new HttpParams({ fromString: 'wordId=' + wordId.toString() });\n    return this.http.get<SynonymWord>(`${environment.apiUrl}/word/edit`, { params: para }).pipe(\n      map(result => { return result }),\n      catchError(this.handleError)\n    );\n  }\n\n  create(sw: SynonymWord): Observable<ResponseObject> {\n    return this.http.post<ResponseObject>(`${environment.apiUrl}/word/create`, sw).pipe(\n      map(result => { return result }),\n      catchError(this.handleError)\n    )\n  }\n\n  update(sw: SynonymWord): Observable<ResponseObject> {\n    return this.http.put<ResponseObject>(`${environment.apiUrl}/word/update`, sw).pipe(\n      map(result => { return result }),\n      catchError(this.handleError)\n    )\n  }\n\n  createSynonym(syn: CreateSynonym): Observable<ResponseObject> {\n    return this.http.post<ResponseObject>(`${environment.apiUrl}/synonym/create`, syn).pipe(\n      map(result => { return result }),\n      catchError(this.handleError)\n    )\n  }\n\n  deleteSynonym(synonymId: number): Observable<any> {\n    return this.http.delete(`${environment.apiUrl}/synonym/delete/${synonymId}`).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  deleteWord(wordId: number): Observable<any> {\n    return this.http.delete(`${environment.apiUrl}/word/delete/${wordId}`).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something is wrong! Please try again later.');\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SynonymListComponent } from './components/synonym-list.component';\nimport { SynonymEditComponent } from './components/synonym-edit/synonym-edit.component';\nimport { UIModule } from '../../_ui/ui.module';\nimport { SynonymRoutingModule } from './synonym.router'\n\n@NgModule({\n  declarations: [\n    SynonymListComponent,\n    SynonymEditComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    UIModule,\n    SynonymRoutingModule,\n  ]\n})\nexport class SynonymModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SynonymEditComponent } from './components/synonym-edit/synonym-edit.component';\r\nimport { SynonymListComponent } from './components/synonym-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'word', component: SynonymListComponent },\r\n    { path: 'word/new', component: SynonymEditComponent }, // NEW\r\n    { path: 'word/edit/:wordId', component: SynonymEditComponent }, // EDIT\r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n\r\n  export class SynonymRoutingModule { }\r\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SynonymListComponent } from './administration/synonym/components/synonym-list.component';\nimport { HomeComponent } from './home/components/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n  { path: 'word', component: SynonymListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'test-synonyms';\n}\n","<div class=\"d-flex\" id=\"wrapper\">\n\n  <!-- Sidebar -->\n  <side-bar></side-bar>\n\n  <div id=\"page-content-wrapper\">\n    <!-- Header -->\n    <nav-menu></nav-menu>\n    <!-- Page Content -->\n    <div class=\"container-fluid mt-2\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { SideBarComponent } from './side-bar/side-bar.component';\nimport { HomeModule } from './home/home.module';\nimport { SynonymModule } from './administration/synonym/synonym.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    SideBarComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AppRoutingModule,\n    HomeModule,\n    SynonymModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, RequiredValidator, Validators } from '@angular/forms';\nimport { HomeFilter } from '../../models/HomeFilter'\n@Component({\n  selector: 'home-filter',\n  templateUrl: './home-filter.component.html',\n  styleUrls: ['./home-filter.component.css']\n})\n/**\n * Here we create a search for the home page\n */\nexport class HomeFilterComponent implements OnInit {\n  filterForm: FormGroup;\n  submitted = false;\n  get f() { return this.filterForm.controls; }\n\n  @Output() onSubmit = new EventEmitter<HomeFilter>();\n  @Output() onClear = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initializeFilterForm()\n  }\n\n  initializeFilterForm() {\n    this.filterForm = this.formBuilder.group({\n      searchTerm: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(255), Validators.pattern('^[a-zA-Z ]*$')]),\n      includeTransitive: new FormControl(''),\n    })\n  }; // init. search form and set \"silent\" validations, don't go at the backend\n\n  clearForm() {\n    this.filterForm.patchValue({ searchTerm: '' }); // empty search field\n\n    this.onClear.emit();\n  } // empty search filed and emit an event\n\n  submitForm(values: any) {\n    this.submitted = true;\n    \n    if (this.filterForm.invalid) {\n      this.onClear.emit(); // clear search\n      return;\n    } // form must be valid to create request to back end\n\n    const filter = new HomeFilter();\n    filter.searchTerm = values && values.searchTerm ? values.searchTerm : \"\";\n    filter.includeTransitive = values && values.includeTransitive ? values.includeTransitive : false;\n\n    this.onSubmit.emit(filter);\n  }\n\n}\n","<form [formGroup]=\"filterForm\" (ngSubmit)=\"submitForm(filterForm.value)\">\n    <div class=\"mt-1\">\n        <div class=\"form-row\">\n            <div class=\"input-group input-group-lg col-md-9\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\"><i class=\"fa fa-search\"></i></span>\n                </div>\n                <input type=\"text\" formControlName=\"searchTerm\" class=\"form-control\" aria-label=\"Large\"\n                    aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Search by Word Or Synonym\">\n            </div>\n\n            <div class=\"btn-group btn-group-lg col-md-3\" role=\"group\" aria-label=\"...\">\n                <button type=\"button\" class=\"btn btn-success\" type=\"submit\">Search</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"clearForm()\">Clear</button>\n            </div>\n        </div>\n        <div class=\"row mt-1\">\n            <div class=\"col-md-9\">&nbsp;</div>\n            <div class=\"col-md-3 float-left custom-control-pos\">\n                <div class=\"custom-control-lg custom-control custom-checkbox\">\n                    <input class=\"custom-control-input\" id=\"checkbox-large\" type=\"checkbox\"\n                        formControlName=\"includeTransitive\" />\n                    <label class=\"custom-control-label text-secondary\" for=\"checkbox-large\">\n                        Include transative rule\n                    </label>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { HomeFilter } from '../models/HomeFilter';\nimport { ResponseSearch } from '../models/ResponseSearch';\nimport { SearchResult } from '@models/SearchResult';\nimport { HomeService } from '../services/home.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\n\nexport class HomeComponent implements OnInit {\n  showLoading: boolean = false;\n  filter: HomeFilter;\n  searchResults: SearchResult[];\n  emptyResult: boolean = false\n\n  constructor(\n    private service: HomeService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  filterWords(filter: HomeFilter) {\n    this.filter = filter;\n    this.getSearchResult(filter);\n  } // click on filter button\n\n  clearResults() {\n    this.searchResults = []\n  } // click on clear button\n\n  private getSearchResult(filter: HomeFilter) {\n    this.showLoading = true;\n    this.service.search(filter)\n      .subscribe((result: ResponseSearch) => {\n        this.searchResults = result.data;\n        this.showLoading = false;\n        this.emptyResult = result == null || result.data.length === 0;\n      },\n        error => {\n          this.toastr.error(error); // user friendly errors from API\n          this.showLoading = false;\n        });\n  } // return data for grid\n\n}\n","<home-filter (onSubmit)=\"filterWords($event)\" (onClear)=\"clearResults()\"></home-filter>\n<div *ngIf=\"emptyResult\" class=\"mt-1\">\n    <h2>No search results!</h2>\n</div>\n<div class=\"card-columns\">\n    <div class=\"card mb-3 mt-3 text-left\" *ngFor=\"let search of searchResults\">\n        <div class=\"card-header\">\n            <i class=\"fa fa-list\"></i> &nbsp;<strong>{{ search.wordText }}</strong>\n        </div>\n        <ul class=\"list-group list-group-flush\" *ngFor=\"let synonym of search.synonyms\">\n            <li class=\"list-group-item\"><i class=\"fa fa-minus\"></i> &nbsp;<i>{{ synonym.synonymText | titlecase }}</i></li>\n        </ul>\n    </div>\n</div>\n<loader *ngIf=\"showLoading\"></loader>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './components/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeFilterComponent } from './components/home-filter/home-filter.component';\nimport { UIModule } from '@app/_ui/ui.module';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    HomeFilterComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIModule,\n  ]\n})\nexport class HomeModule { }\n","/**\r\n * Search fields\r\n */\r\nexport class HomeFilter {\r\n    constructor(){\r\n        this.searchTerm = \"\";\r\n    }\r\n\r\n    searchTerm: string\r\n    includeTransitive: boolean;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport { ResponseSearch } from '../models/ResponseSearch';\nimport { from, Observable, of, throwError } from 'rxjs';\nimport { HomeFilter } from '../models/HomeFilter';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n  search(filter: HomeFilter): Observable<ResponseSearch> {\n    if (!filter) {\n      filter = new HomeFilter();\n    }\n\n    const { searchTerm } = filter;\n    const para = new HttpParams({ fromString: 'searchTerm=' + searchTerm + '&includeTransitive=' + filter.includeTransitive });\n\n    return this.http.get<ResponseSearch>(`${environment.apiUrl}/word/search`, { params: para })\n      .pipe(\n        map(result => { return result }),\n        catchError(this.handleError)\n      );\n\n      // let ret: ResponseSearch = {\n      //   data: [{\n      //     wordId: 1, wordText: 'Bossy', synonyms: [\n      //       { synonymText: 'controlling' },\n      //       { synonymText: 'tyrannical' }\n      //     ]\n      //   }\n      //   ],\n      //   isError: false\n      // };\n      // return of(ret);\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Code ${error.status}, ` + `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something is wrong! Please try again later.');\n  };\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n  isExpanded = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","<header>\n    <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\n        <p class=\"text-left\">Synonyms search tool</p>\n        <div>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"\n                aria-label=\"Toggle navigation\" [attr.aria-expanded]=\"isExpanded\" (click)=\"toggle()\">\n                <span class=\"navbar-toggler-icon\"></span>\n                <div class=\"d-sm-inline-flex flex-sm-row-reverse\" [ngClass]=\"{ show: isExpanded }\">\n                    <ul class=\"navbar-nav flex-grow\">\n                        <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\"\n                            [routerLinkActiveOptions]=\"{ exact: true }\" *ngIf=\"isExpanded\">\n                            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n                        </li>\n                        <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\" *ngIf=\"isExpanded\">\n                            <a class=\"nav-link text-dark\" routerLink=\"/synonym\">Synonyms</a>\n                        </li>\n                    </ul>\n                </div>\n            </button>\n            <div class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\" [ngClass]=\"{ show: isExpanded }\">\n                \n            </div>\n        </div>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n    <div class=\"sidebar-heading\">&nbsp; </div>\n    <ul class=\"list-group list-group-flush\">\n      <li><a class=\"list-group-item list-group-item-action bg-light\" routerLink=\"/home\">Home</a></li>\n      <li><a class=\"list-group-item list-group-item-action bg-light\" routerLink=\"/word\">Administration</a>\n      </li>\n    </ul>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  secure: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}